# ------------------ COATING PROCESS FORM - SEASON 2 UPDATES ------------------
# âœ… Implements:
# - Multi-entry for Coater Tension and Solution Mass
# - Autogenerated primary keys
# - Optional DCoatingID
# - Time field for Solution Mass
# - Submit-on-enter prevention
# ------------------------------------------------------------------------------

import json
import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import pandas as pd

# ------------------ GOOGLE AUTH ------------------
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(
    json.loads(st.secrets["gcp_service_account"]), scope)
client = gspread.authorize(creds)
spreadsheet = client.open("R&D Data Form")

# ------------------ HELPERS ------------------
def get_or_create_worksheet(sheet, title, headers):
    try:
        worksheet = sheet.worksheet(title)
    except gspread.exceptions.WorksheetNotFound:
        worksheet = sheet.add_worksheet(title=title, rows="1000", cols="50")
        worksheet.append_row(headers)
    return worksheet

def get_next_id(worksheet, id_column):
    records = worksheet.get_all_records()
    if records:
        last_id = max([int(record[id_column]) for record in records if str(record[id_column]).isdigit()])
        return last_id + 1
    else:
        return 1

# ------------------ LOAD REF DATA ------------------
solution_ids = [r["Solution ID"] for r in get_or_create_worksheet(spreadsheet, "Solution ID Tbl", ["Solution ID"]).get_all_records()]
batch_fiber_ids = [r["Batch_Fiber_ID"] for r in get_or_create_worksheet(spreadsheet, "Uncoated Fiber Data Tbl", ["Batch_Fiber_ID"]).get_all_records()]
uncoated_spool_ids = [r["UncoatedSpool_ID"] for r in get_or_create_worksheet(spreadsheet, "UnCoatedSpool ID Tbl", ["UncoatedSpool_ID"]).get_all_records()]

# ------------------ TABS ------------------
st.title("ðŸ§ª Coating Process Entry")
tabs = st.tabs(["Pilot Coating", "Dip Coating", "Coater Tension", "Solution Mass"])

# ------------------ PILOT COATING FORM ------------------
with tabs[0]:
    sheet = get_or_create_worksheet(spreadsheet, "Pilot Coating Process Tbl", [
        "PCoating_ID", "Solution ID", "Date", "Box_Temperature", "Box_RH", "N2_Flow", "Load_Cell_Slope",
        "Number_of_Fibers", "Coating_Speed", "Tower_1_Set_Point", "Tower_1_Entry_Temperature",
        "Tower_2_Set_Point", "Tower_2_Entry_Temperature", "Coating_Layer_Type", "Operator_Initials",
        "Ambient_Temperature", "Ambient_RH", "Notes"])

    with st.form("pilot_form", clear_on_submit=True):
        pcoating_id = get_next_id(sheet, "PCoating_ID")
        st.markdown(f"**Auto ID:** `{pcoating_id}`")
        sid = st.selectbox("Solution ID", solution_ids)
        date = st.date_input("Date")
        bt, brh, n2, slope = st.columns(4)
        box_temp = bt.number_input("Box Temp (Â°C)", 0.0)
        box_rh = brh.number_input("Box RH (%)", 0.0)
        n2_flow = n2.number_input("N2 Flow (L/min)", 0.0)
        load_slope = slope.number_input("Load Cell Slope", 0.0)
        nfib = st.number_input("Number of Fibers", 0)
        speed = st.number_input("Coating Speed (m/min)", 0.0)
        t1sp, t1et = st.columns(2)
        t1_set = t1sp.number_input("Tower 1 Set Point (Â°C)", 0.0)
        t1_ent = t1et.number_input("Tower 1 Entry Temp (Â°C)", 0.0)
        t2sp, t2et = st.columns(2)
        t2_set = t2sp.number_input("Tower 2 Set Point (Â°C)", 0.0)
        t2_ent = t2et.number_input("Tower 2 Entry Temp (Â°C)", 0.0)
        coat_type = st.selectbox("Coating Layer Type", ["GL", "AL", "PL"])
        initials = st.text_input("Operator Initials")
        amb_temp = st.number_input("Ambient Temp (Â°C)", 0.0)
        amb_rh = st.number_input("Ambient RH (%)", 0.0)
        notes = st.text_area("Notes")
        submit = st.form_submit_button("Submit Pilot Coating")

    if submit:
        sheet.append_row([pcoating_id, sid, date.strftime("%Y-%m-%d"), box_temp, box_rh, n2_flow, load_slope,
                          nfib, speed, t1_set, t1_ent, t2_set, t2_ent, coat_type,
                          initials, amb_temp, amb_rh, notes])
        st.success(f"âœ… Saved Pilot Coating ID {pcoating_id}")

# ------------------ DIP COATING FORM ------------------
with tabs[1]:
    sheet = get_or_create_worksheet(spreadsheet, "Dip Coating Process Tbl", [
        "DCoating_ID", "Solution ID", "Batch_Fiber_ID", "UncoatedSpool_ID", "Date", "Box_Temperature", "Box_RH",
        "N2_Flow", "Number_of_Fibers", "Coating_Speed", "Annealing_Time", "Annealing_Temperature",
        "Coating_Layer_Type", "Operator_Initials", "Ambient_Temperature", "Ambient_RH", "Notes"])

    with st.form("dip_form", clear_on_submit=True):
        dcoating_id = get_next_id(sheet, "DCoating_ID")
        st.markdown(f"**Auto ID:** `{dcoating_id}`")
        sid = st.selectbox("Solution ID", solution_ids)
        batch_id = st.selectbox("Batch Fiber ID", batch_fiber_ids)
        spool_id = st.selectbox("Uncoated Spool ID", uncoated_spool_ids)
        date = st.date_input("Date")
        box_temp = st.number_input("Box Temp (Â°C)", 0.0)
        box_rh = st.number_input("Box RH (%)", 0.0)
        n2_flow = st.number_input("N2 Flow (L/min)", 0.0)
        nfib = st.number_input("Number of Fibers", 0)
        speed = st.number_input("Coating Speed (m/min)", 0.0)
        anneal_time = st.number_input("Annealing Time (min)", 0.0)
        anneal_temp = st.number_input("Annealing Temp (Â°C)", 0.0)
        coat_type = st.selectbox("Coating Layer Type", ["GL", "AL", "PL"])
        initials = st.text_input("Operator Initials")
        amb_temp = st.number_input("Ambient Temp (Â°C)", 0.0)
        amb_rh = st.number_input("Ambient RH (%)", 0.0)
        notes = st.text_area("Notes")
        submit = st.form_submit_button("Submit Dip Coating")

    if submit:
        sheet.append_row([dcoating_id, sid, batch_id, spool_id, date.strftime("%Y-%m-%d"), box_temp, box_rh,
                          n2_flow, nfib, speed, anneal_time, anneal_temp, coat_type,
                          initials, amb_temp, amb_rh, notes])
        st.success(f"âœ… Saved Dip Coating ID {dcoating_id}")
